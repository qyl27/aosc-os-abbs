From 74f20bb41ec3b498bfe1e90484aeab9190592b0f Mon Sep 17 00:00:00 2001
From: eatradish <sakiiily@aosc.io>
Date: Fri, 14 Jun 2024 23:05:46 +0800
Subject: [PATCH 11/13] Drop check update feature

---
 src/components/layout/update-button.tsx       |  47 ------
 src/components/setting/mods/update-viewer.tsx | 143 ------------------
 src/components/setting/setting-verge.tsx      |  39 +----
 src/pages/_layout.tsx                         |   2 -
 4 files changed, 3 insertions(+), 228 deletions(-)
 delete mode 100644 src/components/layout/update-button.tsx
 delete mode 100644 src/components/setting/mods/update-viewer.tsx

diff --git a/src/components/layout/update-button.tsx b/src/components/layout/update-button.tsx
deleted file mode 100644
index 601a890..0000000
--- a/src/components/layout/update-button.tsx
+++ /dev/null
@@ -1,47 +0,0 @@
-import useSWR from "swr";
-import { useRef } from "react";
-import { Button } from "@mui/material";
-import { checkUpdate } from "@tauri-apps/api/updater";
-import { UpdateViewer } from "../setting/mods/update-viewer";
-import { DialogRef } from "../base";
-import { useVerge } from "@/hooks/use-verge";
-
-interface Props {
-  className?: string;
-}
-
-export const UpdateButton = (props: Props) => {
-  const { className } = props;
-  const { verge } = useVerge();
-  const { auto_check_update } = verge || {};
-
-  const viewerRef = useRef<DialogRef>(null);
-
-  const { data: updateInfo } = useSWR(
-    auto_check_update || auto_check_update === null ? "checkUpdate" : null,
-    checkUpdate,
-    {
-      errorRetryCount: 2,
-      revalidateIfStale: false,
-      focusThrottleInterval: 36e5, // 1 hour
-    }
-  );
-
-  if (!updateInfo?.shouldUpdate) return null;
-
-  return (
-    <>
-      <UpdateViewer ref={viewerRef} />
-
-      <Button
-        color="error"
-        variant="contained"
-        size="small"
-        className={className}
-        onClick={() => viewerRef.current?.open()}
-      >
-        New
-      </Button>
-    </>
-  );
-};
diff --git a/src/components/setting/mods/update-viewer.tsx b/src/components/setting/mods/update-viewer.tsx
deleted file mode 100644
index bea9a01..0000000
--- a/src/components/setting/mods/update-viewer.tsx
+++ /dev/null
@@ -1,143 +0,0 @@
-import useSWR from "swr";
-import { forwardRef, useImperativeHandle, useState, useMemo } from "react";
-import { useLockFn } from "ahooks";
-import { Box, LinearProgress, Button } from "@mui/material";
-import { useTranslation } from "react-i18next";
-import { relaunch } from "@tauri-apps/api/process";
-import { checkUpdate, installUpdate } from "@tauri-apps/api/updater";
-import { BaseDialog, DialogRef, Notice } from "@/components/base";
-import { useUpdateState, useSetUpdateState } from "@/services/states";
-import { listen, Event, UnlistenFn } from "@tauri-apps/api/event";
-import { portableFlag } from "@/pages/_layout";
-import { open as openUrl } from "@tauri-apps/api/shell";
-import ReactMarkdown from "react-markdown";
-
-let eventListener: UnlistenFn | null = null;
-
-export const UpdateViewer = forwardRef<DialogRef>((props, ref) => {
-  const { t } = useTranslation();
-
-  const [open, setOpen] = useState(false);
-
-  const updateState = useUpdateState();
-  const setUpdateState = useSetUpdateState();
-
-  const { data: updateInfo } = useSWR("checkUpdate", checkUpdate, {
-    errorRetryCount: 2,
-    revalidateIfStale: false,
-    focusThrottleInterval: 36e5, // 1 hour
-  });
-
-  const [downloaded, setDownloaded] = useState(0);
-  const [buffer, setBuffer] = useState(0);
-  const [total, setTotal] = useState(0);
-
-  useImperativeHandle(ref, () => ({
-    open: () => setOpen(true),
-    close: () => setOpen(false),
-  }));
-
-  const markdownContent = useMemo(() => {
-    if (!updateInfo?.manifest?.body) {
-      return "New Version is available";
-    }
-    return updateInfo?.manifest?.body;
-  }, [updateInfo]);
-
-  const breakChangeFlag = useMemo(() => {
-    if (!updateInfo?.manifest?.body) {
-      return false;
-    }
-    return updateInfo?.manifest?.body.toLowerCase().includes("break change");
-  }, [updateInfo]);
-
-  const onUpdate = useLockFn(async () => {
-    if (portableFlag) {
-      Notice.error(t("Portable Updater Error"));
-      return;
-    }
-    if (!updateInfo?.manifest?.body) return;
-    if (breakChangeFlag) {
-      Notice.error(t("Break Change Update Error"));
-      return;
-    }
-    if (updateState) return;
-    setUpdateState(true);
-    if (eventListener !== null) {
-      eventListener();
-    }
-    eventListener = await listen(
-      "tauri://update-download-progress",
-      (e: Event<any>) => {
-        setTotal(e.payload.contentLength);
-        setBuffer(e.payload.chunkLength);
-        setDownloaded((a) => {
-          return a + e.payload.chunkLength;
-        });
-      }
-    );
-    try {
-      await installUpdate();
-      await relaunch();
-    } catch (err: any) {
-      Notice.error(err?.message || err.toString());
-    } finally {
-      setUpdateState(false);
-    }
-  });
-
-  return (
-    <BaseDialog
-      open={open}
-      title={
-        <Box display="flex" justifyContent="space-between">
-          {`New Version v${updateInfo?.manifest?.version}`}
-          <Box>
-            <Button
-              variant="contained"
-              size="small"
-              onClick={() => {
-                openUrl(
-                  `https://github.com/clash-verge-rev/clash-verge-rev/releases/tag/v${updateInfo?.manifest?.version}`
-                );
-              }}
-            >
-              {t("Go to Release Page")}
-            </Button>
-          </Box>
-        </Box>
-      }
-      contentSx={{ minWidth: 360, maxWidth: 400, height: "50vh" }}
-      okBtn={t("Update")}
-      cancelBtn={t("Cancel")}
-      onClose={() => setOpen(false)}
-      onCancel={() => setOpen(false)}
-      onOk={onUpdate}
-    >
-      <Box sx={{ height: "calc(100% - 10px)", overflow: "auto" }}>
-        <ReactMarkdown
-          components={{
-            a: ({ node, ...props }) => {
-              const { children } = props;
-              return (
-                <a {...props} target="_blank">
-                  {children}
-                </a>
-              );
-            },
-          }}
-        >
-          {markdownContent}
-        </ReactMarkdown>
-      </Box>
-      {updateState && (
-        <LinearProgress
-          variant="buffer"
-          value={(downloaded / total) * 100}
-          valueBuffer={buffer}
-          sx={{ marginTop: "5px" }}
-        />
-      )}
-    </BaseDialog>
-  );
-});
diff --git a/src/components/setting/setting-verge.tsx b/src/components/setting/setting-verge.tsx
index 77c45e5..784a0f5 100644
--- a/src/components/setting/setting-verge.tsx
+++ b/src/components/setting/setting-verge.tsx
@@ -1,14 +1,7 @@
 import { useCallback, useRef } from "react";
 import { useTranslation } from "react-i18next";
 import { open } from "@tauri-apps/api/dialog";
-import {
-  Button,
-  MenuItem,
-  Select,
-  Input,
-  Typography,
-  Box,
-} from "@mui/material";
+import { Button, MenuItem, Select, Input, Typography } from "@mui/material";
 import {
   exitApp,
   openAppDir,
@@ -17,10 +10,9 @@ import {
   openDevTools,
   copyClashEnv,
 } from "@/services/cmds";
-import { checkUpdate } from "@tauri-apps/api/updater";
 import { useVerge } from "@/hooks/use-verge";
 import { version } from "@root/package.json";
-import { DialogRef, Notice } from "@/components/base";
+import { DialogRef } from "@/components/base";
 import { SettingList, SettingItem } from "./mods/setting-comp";
 import { ThemeModeSwitch } from "./mods/theme-mode-switch";
 import { ConfigViewer } from "./mods/config-viewer";
@@ -29,7 +21,6 @@ import { MiscViewer } from "./mods/misc-viewer";
 import { ThemeViewer } from "./mods/theme-viewer";
 import { GuardState } from "./mods/guard-state";
 import { LayoutViewer } from "./mods/layout-viewer";
-import { UpdateViewer } from "./mods/update-viewer";
 import getSystem from "@/utils/get-system";
 import { routers } from "@/pages/_routers";
 import { TooltipIcon } from "@/components/base/base-tooltip-icon";
@@ -58,30 +49,11 @@ const SettingVerge = ({ onError }: Props) => {
   const miscRef = useRef<DialogRef>(null);
   const themeRef = useRef<DialogRef>(null);
   const layoutRef = useRef<DialogRef>(null);
-  const updateRef = useRef<DialogRef>(null);
 
   const onChangeData = (patch: Partial<IVergeConfig>) => {
     mutateVerge({ ...verge, ...patch }, false);
   };
 
-  const onCheckUpdate = async () => {
-    try {
-      const info = await checkUpdate();
-      if (!info?.shouldUpdate) {
-        Notice.success(t("Currently on the Latest Version"));
-      } else {
-        updateRef.current?.open();
-      }
-    } catch (err: any) {
-      Notice.error(err.message || err.toString());
-    }
-  };
-
-  const onCopyClashEnv = useCallback(async () => {
-    await copyClashEnv();
-    Notice.success(t("Copy Success"), 1000);
-  }, []);
-
   return (
     <SettingList title={t("Verge Setting")}>
       <ThemeViewer ref={themeRef} />
@@ -89,7 +61,6 @@ const SettingVerge = ({ onError }: Props) => {
       <HotkeyViewer ref={hotkeyRef} />
       <MiscViewer ref={miscRef} />
       <LayoutViewer ref={layoutRef} />
-      <UpdateViewer ref={updateRef} />
 
       <SettingItem label={t("Language")}>
         <GuardState
@@ -140,9 +111,7 @@ const SettingVerge = ({ onError }: Props) => {
 
       <SettingItem
         label={t("Copy Env Type")}
-        extra={
-          <TooltipIcon icon={ContentCopyRounded} onClick={onCopyClashEnv} />
-        }
+        extra={<TooltipIcon icon={ContentCopyRounded} onClick={copyClashEnv} />}
       >
         <GuardState
           value={env_type ?? (OS === "windows" ? "powershell" : "bash")}
@@ -256,8 +225,6 @@ const SettingVerge = ({ onError }: Props) => {
 
       <SettingItem onClick={openLogsDir} label={t("Open Logs Dir")} />
 
-      <SettingItem onClick={onCheckUpdate} label={t("Check for Updates")} />
-
       <SettingItem onClick={openDevTools} label={t("Open Dev Tools")} />
 
       <SettingItem
diff --git a/src/pages/_layout.tsx b/src/pages/_layout.tsx
index 836c7ad..6627333 100644
--- a/src/pages/_layout.tsx
+++ b/src/pages/_layout.tsx
@@ -19,7 +19,6 @@ import { Notice } from "@/components/base";
 import { LayoutItem } from "@/components/layout/layout-item";
 import { LayoutControl } from "@/components/layout/layout-control";
 import { LayoutTraffic } from "@/components/layout/layout-traffic";
-import { UpdateButton } from "@/components/layout/update-button";
 import { useCustomTheme } from "@/components/layout/use-custom-theme";
 import getSystem from "@/utils/get-system";
 import "dayjs/locale/ru";
@@ -157,7 +156,6 @@ const Layout = () => {
                 />
                 <LogoSvg fill={isDark ? "white" : "black"} />
               </div>
-              {<UpdateButton className="the-newbtn" />}
             </div>
 
             <List className="the-menu">
-- 
2.45.2

